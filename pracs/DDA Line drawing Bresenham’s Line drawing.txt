Practical No 4
a. Develop the program for DDA Line drawing algorithm
#include<graphics.h>
#include<dos.h>
#include<iostream.h>
#include<math.h>
#include<conio.h>
void main()
{
float x,y,x1,y1,x2,y2,dx,dy,length;
int i,gd=DETECT,gm;
cout<<"Enter the value of x1 :\t";
cin>>x1;
cout<<"Enter the value of y1 :\t";
cin>>y1;
cout<<"Enter the value of x2 :\t";
cin>>x2;
cout<<"Enter the value of y2 :\t";
cin>>y2;

initgraph(&gd,&gm,"c:/tc/bgi");
dx=abs(x2-x1);
dy=abs(y2-y1);
if(dx>=dy)
	{
	length=dx;
	}
else
	{
	length=dy;
	}
dx=(x2-x1)/length;
dy=(y2-y1)/length;
x=x1+0.5;
y=y1+0.5;
i=1;
while(i<=length)
	{
	putpixel(x,y,15);
	x=x+dx;
	y=y+dy;
	i=i+1;
	delay(100);
	}
getch();
closegraph();
}
  
b. Develop the program for Bresenham’s Line drawing algorithm.
#include<graphics.h>
#include<dos.h>
#include<iostream.h>
#include<math.h>
#include<conio.h>
void main()
{
float e,x,y,x1,y1,x2,y2,dx,dy,length;
int i,gd=DETECT,gm;
cout<<"Enter the value of x1 :\t";
cin>>x1;
cout<<"Enter the value of y1 :\t";
cin>>y1;
cout<<"Enter the value of x2 :\t";
cin>>x2;
cout<<"Enter the value of y2 :\t";
cin>>y2;

initgraph(&gd,&gm,"c:/tc/bgi");
dx=abs(x2-x1);
dy=abs(y2-y1);
x=x1;
y=y1;
e=2*dy-dx;
i=1;
do
{
putpixel(x,y,7);
while(e>=0)
	{
	y=y+1;
	e=e-2*dx;
	}
x=x+1;
e=e+2*dy;
i=i++;
while(i<=dx);
}
getch();
closegraph();
}
 
 
